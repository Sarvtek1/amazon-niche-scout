name: Preview deploy on PR

on:
  # Build + deploy preview when a PR to main is opened/updated
  pull_request:
    branches: [ main ]
  # Clean up the preview channel when the PR is closed/merged
  pull_request_target:
    types: [ closed ]
    branches: [ main ]

jobs:
  build_and_preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Create .env.local
        run: |
          cat > .env.local << 'EOF'
          VITE_FB_API_KEY=${{ secrets.VITE_FB_API_KEY }}
          VITE_FB_AUTH_DOMAIN=${{ secrets.VITE_FB_AUTH_DOMAIN }}
          VITE_FB_PROJECT_ID=${{ secrets.VITE_FB_PROJECT_ID }}
          VITE_FB_STORAGE_BUCKET=${{ secrets.VITE_FB_STORAGE_BUCKET }}
          VITE_FB_SENDER_ID=${{ secrets.VITE_FB_SENDER_ID }}
          VITE_FB_APP_ID=${{ secrets.VITE_FB_APP_ID }}
          EOF

      - name: Build
        run: npm run build

      - name: Deploy preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SARVTEK_NICHE_FINDER }}
          projectId: sarvtek-niche-finder
          channelId: pr-${{ github.event.number }}   # stable per PR
          expires: 7d

  cleanup_preview:
    # Runs when PR is closed/merged
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SARVTEK_NICHE_FINDER }}
          projectId: sarvtek-niche-finder
          channelId: pr-${{ github.event.number }}
          action: delete
